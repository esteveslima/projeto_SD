worker_processes 1;							

events {
	worker_connections 100;					
}

http {
 
	include nginx-basic.conf;
	include nginx-cache.conf;
	include nginx-security.conf;
	#include nginx-ssl.conf;
	include nginx-log.conf;
	include nginx-gzip.conf;
	include /etc/nginx/sites-enabled/*;
 
    
	upstream front-server-upstream {      
		least_conn;
		server front-server:80 weight=1 max_fails=3 fail_timeout=15s; 
	}
	upstream user-server-upstream {      
		least_conn;
		server user-server:5000 weight=1 max_fails=3 fail_timeout=15s; 
	}
	upstream game-server-upstream {    		
		least_conn;
		server game-server:5001 weight=1 max_fails=3 fail_timeout=15s; 
	}
	upstream queue-server-upstream {    
		least_conn;
		server queue-server:5002 weight=1 max_fails=3 fail_timeout=15s; 
	}	

	
    server {
        server_name xswords;				
		listen 80;


        
        proxy_set_header 			Host $host;											
        proxy_set_header 			X-Real-IP $remote_addr;	
        proxy_set_header 			X-Forwarded-Proto $scheme; 			
        proxy_set_header 			X-Forwarded-For $proxy_add_x_forwarded_for;  


		
		location = /auth {
			internal;																	
			proxy_method 			GET;			
			proxy_pass              http://user-server-upstream/auth/public/authorization;		
			proxy_pass_request_body off;
			proxy_set_header        Content-Length "";
			proxy_set_header        X-Original-URI $request_uri;			
		}		
		
		location / {					# front-server
			proxy_pass 					http://front-server-upstream;
		}
		location /game-server {
			location ~ ^((?!\/public\/).)*$ {											
				auth_request 			/auth;											
				auth_request_set 		$auth_status $upstream_status;
				rewrite 				^/game-server/(.*) /$1  break;
				proxy_pass 				http://game-server-upstream;
			}
			rewrite 					^/game-server/(.*) /$1  break;						
			proxy_pass 					http://game-server-upstream;					
		}
		location /queue-server {			
			
			location ~ ^((?!\/public\/).)*$ {
				auth_request 			/auth; 
				auth_request_set 		$auth_status $upstream_status;
				rewrite 				^/queue-server/(.*) /$1  break;
				proxy_pass 				http://queue-server-upstream;

			}
			rewrite 					^/queue-server/(.*) /$1  break;
			proxy_pass 					http://queue-server-upstream;
		}
		location /user-server {			
			location ~ ^((?!\/public\/).)*$ {
				auth_request 			/auth;
				auth_request_set 		$auth_status $upstream_status;				
				rewrite 				^/user-server/(.*) /$1  break;
				proxy_pass 				http://user-server-upstream;
			}
			rewrite 					^/user-server/(.*) /$1 break;			
			proxy_pass 					http://user-server-upstream;
		}
		


		location /queue-ws {																# ws locations defined by socket.io custom path
			proxy_http_version 		1.1;
			proxy_set_header 		Upgrade $http_upgrade;
			proxy_set_header 		Connection "Upgrade";
					
			proxy_pass 				http://queue-server-upstream;
		}

		location /game-ws {	
			proxy_http_version 		1.1;
			proxy_set_header 		Upgrade $http_upgrade;
			proxy_set_header 		Connection "Upgrade";

			proxy_pass 				http://game-server-upstream;			
		}

    }
}
